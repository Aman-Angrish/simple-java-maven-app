env:
  STACK: java
  BUILD_TECH: java_maven
  MVN_ARGS: clean install --batch-mode --update-snapshots verify
  CONTINUE_ON_ERROR: false
  CONTINUE_ON_ERROR_SETUP: true
  JOB_STATUS_CODE: 0
  
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
      
jobs:
  BuildPipeline:
    runs-on: ubuntu-latest
    
    steps:
      - name: checkout repo
        uses: actions/checkout@v2
        continue-on-error: ${{ env.CONTINUE_ON_ERROR }}
        with: 
          ref: ${{ github.REF }}
          fetch-depth: 0
          
      - name: setup java sdk
        id: setup_jdk
        if: ${{ env.STACK == 'java' }}
        uses: actions/setup-java@v2
        continue-on-error: ${{ env.CONTINUE_ON_ERROR }}
        with:
          distribution: 'adopt'
          java-version: '11'
          
      - name: Build with maven
        id: build_java_maven
        #if: ${{ env.BUILD_TECH == java_maven }}
        run: |
          mvn ${{ env.MVN_ARGS }}
        continue-on-error: ${{ env.CONTINUE_ON_ERROR }}
        
      ######## JUnit Test with Maven ########
      - name: Test with Maven
        run: mvn -B test --file pom.xml
              
      #- name: SonarCloud Scan
        #run: mvn -B sonar:sonar -Dsonar.projectKey=Java-Maven-Jacoco-Sonar -Dsonar.projectName=Java-Maven-Jacoco-Sonar -Dsonar.host.url=http://3.141.23.89:9000 -Dsonar.login=103e87043953a8c9564be3a5fbed3a26a6d084c2
      - uses: actions/checkout@master
      #- name: SonarCloud Scan
        #uses: sonarsource/sonarcloud-github-action@master
        #run: ./mvnw -B verify sonar:sonar -Dsonar.projectKey=baralga -Dsonar.organization=baralga -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
       # run: mvn -B clean verify -Psonar -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        #env:
          #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
           
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Aman-Angrish_simple-java-maven-app
           
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          # Artifact name
          name: artifact 
          path: ${{ github.workspace }}/
          
  Publish:
    needs: BuildPipeline
    runs-on: ubuntu-latest
    steps:
       - name: Upload
         uses: actions/download-artifact@v2
         with:
            name: artifact
       - uses: actions/checkout@v2
       - name: Set up JDK 11
         uses: actions/setup-java@v1
         with:
           java-version: '11'

       - name: Create GitHub Release
         uses: actions/create-release@v1
         env:
           GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}} 
         with: 
           tag_name: v${{github.run_number}}
           release_name: Release V${{github.run_number}} 

       - name: Update version
         run: mvn -B versions:set -DnewVersion=v${{github.run_number}} -DgenerateBackupPoms=false

       - name: Publish to GitHub Packages Apache Maven
         #run: mvn -B deploy -DartifactId=artifact -Dpackaging=zip -Dfile=artifact.zip -DskipTests --file pom.xml
         run: mvn publish $(ls *.tgz)
         env:
           GITHUB_TOKEN: ${{ github.token }}
