env:
  STACK: java
  BUILD_TECH: java_maven
  MVN_ARGS: clean install --batch-mode --update-snapshots verify
  CONTINUE_ON_ERROR: false
  CONTINUE_ON_ERROR_SETUP: true
  JOB_STATUS_CODE: 0
  
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
      
jobs:
  BuildPipeline:
    runs-on: ubuntu-latest
    
    steps:
      - name: checkout repo
        uses: actions/checkout@v2
        continue-on-error: ${{ env.CONTINUE_ON_ERROR }}
        with: 
          ref: ${{ github.REF }}
          fetch-depth: 0
          
      - name: setup java sdk
        id: setup_jdk
        if: ${{ env.STACK == 'java' }}
        uses: actions/setup-java@v2
        continue-on-error: ${{ env.CONTINUE_ON_ERROR }}
        with:
          distribution: 'adopt'
          java-version: '11'
          
      - name: Build with maven
        id: build_java_maven
        #if: ${{ env.BUILD_TECH == java_maven }}
        run: |
          mvn ${{ env.MVN_ARGS }}
        continue-on-error: ${{ env.CONTINUE_ON_ERROR }}
        
      ######## JUnit Test with Maven ########
      - name: Test with Maven
        run: mvn -B test --file pom.xml
              
      - name: Setup sonarqube
        uses: warchant/setup-sonar-scanner@v3
      - name: Run sonarqube
        env:
          # to get access to secrets.SONAR_TOKEN, provide GITHUB_TOKEN
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: sonar-scanner
             -Dsonar.login=${{ secrets.SONAR_TOKEN }}
             -Dsonar.organization=1corp
             -Dsonar.host.url=https://sonarcloud.io/
             -Dsonar.projectKey=sonar-scanner-action  
                   
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          # Artifact name
          name: artifact 
          path: ${{ github.workspace }}/
          
